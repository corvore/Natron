From 904f4d723255e9e36e40a646a009a5f94f439135 Mon Sep 17 00:00:00 2001
From: Larry Gritz <lg@larrygritz.com>
Date: Tue, 10 Dec 2019 09:25:32 -0800
Subject: [PATCH] Exif read: guard better against out of range offests (#2429)

The dataptr() function returns nullptr if the offset is out of proper
range. But the array_to_spec function calling dataptr did not check for
a nullptr return, ended up segfaulting.

This can happen with JPEG files that have certain malformed (we think)
sections of their camera maker notes.
---
 src/libOpenImageIO/exif-canon.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/libOpenImageIO/exif-canon.cpp b/src/libOpenImageIO/exif-canon.cpp
index a79f763ad..ce185552a 100644
--- a/src/libOpenImageIO/exif-canon.cpp
+++ b/src/libOpenImageIO/exif-canon.cpp
@@ -659,6 +659,8 @@ array_to_spec (ImageSpec& spec,                 // spec to put attribs into
         ASSERT(0 && "unsupported type");
     }
     const T *s = (const T *) pvt::dataptr (dir, buf, offset_adjustment);
+    if (!s)
+        return;
     for (auto&& attr : indices) {
         if (attr.value < int(dir.tdir_count)) {
             T ival = int (s[attr.value]);
